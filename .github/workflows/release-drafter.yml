name: Release Drafter

on:
  push:
    branches:
      - master

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the source code
      uses: actions/checkout@master
    - name: Validate Config
      run: python3 tools/SQF-validate/config_style_checker.py
    - name: Check for BOM
      uses: arma-actions/bom-check@master
      with:
        path: 'Vindicta.Altis'

  validate-with-sqf-vm:
    runs-on: windows-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@master
    - name: Validate SQF with SQF-VM
      run: |
        cd Vindicta.Altis
        ..\tools\SQF-VM\sqfvm.exe -a --no-execute-print --disable-macro-warnings --load . -i D:\a\Vindicta\Vindicta\Vindicta.Altis\Tests\RunTests.sqf

  build:
    runs-on: windows-latest
    needs: [validate, validate-with-sqf-vm]
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'
    - name: Build
      run: |
        $env:RUST_BACKTRACE=1
        cd Vindicta-Addon
        .\tools\buildv2.ps1
        
    - uses: actions/upload-artifact@v1
      with:
        name: build
        path: Vindicta-Addon/release

  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      # Drafts your next Release notes as Pull Requests are merged into "master"
    - name: Draft Release
      id: draft_release
      uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/checkout@master
    - name: Download build
      uses: actions/download-artifact@v1
      with:
        name: build
    - run: |
        mkdir ftp
        mv build/@vindicta/addons/vindicta*.pbo ftp
    - name: Upload ftp
      uses: sebastianpopp/ftp-action@releases/v1
      with:
        host: ${{ secrets.FTP_SERVER }}
        user: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        localDir: "ftp"
        remoteDir: "mpmissions"
    - name: Zip for Release
      run: |
        zip --junk-paths vindicta ftp
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.draft_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./vindicta.zip
        asset_name: vindicta.zip
        asset_content_type: application/zip

        
